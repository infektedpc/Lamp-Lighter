' Gambas class file

Public Sub Form_Open()
  
  Dim splitapacheversion As String[]
  Dim apacheversion As String
  Dim mysqlversion As String
  Dim phpversion As String
  
  Me.Center
  
  'Apache2
  Shell "apache2 -v" To apacheversion
  splitapacheversion = Split(apacheversion, "\n")
  apacheversion = splitapacheversion[0]
  apacheversion = Mid$(apacheversion, InStr(apacheversion, "/") + 1)
  apacheversion = Left$(apacheversion, InStr(apacheversion, "(") - 1)
  'Set Text
  apache_version.Text = apacheversion
  
  'Mysql
  Shell "mysql -V" To mysqlversion
  mysqlversion = Mid$(mysqlversion, InStr(mysqlversion, "Ver") + 3)
  mysqlversion = Left$(mysqlversion, InStr(mysqlversion, "Distrib") - 1)
  mysqlversion = Trim(mysqlversion)
  'Set Text
  mysql_version.Text = mysqlversion
  
  'PHP
  Shell "php -v" To phpversion
  phpversion = Mid$(phpversion, InStr(phpversion, "PHP") + 3)
  phpversion = Left$(phpversion, InStr(phpversion, "-") - 1)
  phpversion = Trim(phpversion)
  'Set Text
  php_version.text = phpversion
  
  'Check if apache2 is runing
  If isRunning("apache2") = True Then
    apache_switch.Value = True
  Endif
  
  'Check if mysql is runing
  If isRunning("mysqld") = True Then
    mysql_switch.Value = True
  Endif
  
End

Public Sub apache_switch_Click()
  
  If apache_switch.Value = True Then
    'Start
    Shell "gksu service apache2 start"
  Else
    'Stop
    Shell "gksu service apache2 stop"
  Endif
  
End

Public Sub mysql_switch_Click()
  
  If mysql_switch.Value = True Then
    'Start
    Shell "gksu service mysql start"
  Else
    'Stop
    Shell "gksu service mysql stop"
  Endif
  
End

Public Sub Button1_Click()
  
  Shell "xdg-open /var/www"
  
End

Public Sub localhost_btn_Click()
  
  Shell "xdg-open http://localhost"
  
End

Public Sub apache_btn_restart_Click()
  
  Shell "gksu service apache2 restart"
  
End

Public Sub mysql_btn_restart_Click()
  
  Shell "gksu service mysql restart"
  
End

Public Sub Button2_Click()
  
  Shell "xdg-open http://localhost/phpmyadmin/"
  
End

Public Function isRunning(sProcess As String) As Boolean
  
  Dim sOutput As String
  
  Exec ["pgrep", "-x", "-c", Shell(sProcess)] To sOutput
  If CInt(Trim(sOutput)) > 0 Then Return True
  Return False
  
End
